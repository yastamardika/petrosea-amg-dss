-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.dim_department
(
    department_id serial NOT NULL,
    department_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    department_code character varying(20) COLLATE pg_catalog."default",
    parent_department_id integer,
    is_active boolean DEFAULT true,
    valid_from date NOT NULL,
    valid_to date DEFAULT '9999-12-31'::date,
    CONSTRAINT dim_department_pkey PRIMARY KEY (department_id),
    CONSTRAINT dim_department_department_name_department_code_valid_from_key UNIQUE (department_name, department_code, valid_from)
);

CREATE TABLE IF NOT EXISTS public.dim_employee
(
    employee_key serial NOT NULL,
    employee_id character varying(20) COLLATE pg_catalog."default" NOT NULL,
    employee_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    gender character varying(10) COLLATE pg_catalog."default",
    date_of_birth date,
    date_of_hire date,
    email character varying(100) COLLATE pg_catalog."default",
    phone character varying(20) COLLATE pg_catalog."default",
    department_id integer,
    position_id integer,
    location_id integer,
    supervisor_id character varying(20) COLLATE pg_catalog."default",
    employee_status character varying(20) COLLATE pg_catalog."default" NOT NULL,
    is_current boolean DEFAULT true,
    valid_from date NOT NULL,
    valid_to date DEFAULT '9999-12-31'::date,
    CONSTRAINT dim_employee_pkey PRIMARY KEY (employee_key),
    CONSTRAINT dim_employee_employee_id_valid_from_key UNIQUE (employee_id, valid_from)
);

CREATE TABLE IF NOT EXISTS public.dim_location
(
    location_id serial NOT NULL,
    location_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    location_code character varying(20) COLLATE pg_catalog."default",
    location_type character varying(50) COLLATE pg_catalog."default",
    city character varying(100) COLLATE pg_catalog."default",
    region character varying(100) COLLATE pg_catalog."default",
    country character varying(100) COLLATE pg_catalog."default",
    is_active boolean DEFAULT true,
    valid_from date NOT NULL,
    valid_to date DEFAULT '9999-12-31'::date,
    CONSTRAINT dim_location_pkey PRIMARY KEY (location_id),
    CONSTRAINT dim_location_location_name_location_code_valid_from_key UNIQUE (location_name, location_code, valid_from)
);

CREATE TABLE IF NOT EXISTS public.dim_position
(
    position_id serial NOT NULL,
    position_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    position_category character varying(50) COLLATE pg_catalog."default" NOT NULL,
    position_level character varying(50) COLLATE pg_catalog."default",
    is_supervisory boolean DEFAULT false,
    is_active boolean DEFAULT true,
    valid_from date NOT NULL,
    valid_to date DEFAULT '9999-12-31'::date,
    CONSTRAINT dim_position_pkey PRIMARY KEY (position_id),
    CONSTRAINT dim_position_position_name_valid_from_key UNIQUE (position_name, valid_from)
);

CREATE TABLE IF NOT EXISTS public.dim_shift_type
(
    shift_type_id serial NOT NULL,
    shift_code character varying(10) COLLATE pg_catalog."default" NOT NULL,
    shift_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    shift_start_time time without time zone,
    shift_end_time time without time zone,
    shift_duration numeric(5, 2),
    is_night_shift boolean DEFAULT false,
    is_active boolean DEFAULT true,
    CONSTRAINT dim_shift_type_pkey PRIMARY KEY (shift_type_id),
    CONSTRAINT dim_shift_type_shift_code_key UNIQUE (shift_code)
);

CREATE TABLE IF NOT EXISTS public.dim_time
(
    time_id serial NOT NULL,
    date_actual date NOT NULL,
    day_of_week character varying(10) COLLATE pg_catalog."default" NOT NULL,
    day_number_in_month smallint NOT NULL,
    day_number_in_year smallint NOT NULL,
    month_actual integer NOT NULL,
    month_name character varying(10) COLLATE pg_catalog."default" NOT NULL,
    quarter_actual integer NOT NULL,
    year_actual integer NOT NULL,
    is_weekday boolean NOT NULL,
    is_holiday boolean NOT NULL,
    holiday_name character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT dim_time_pkey PRIMARY KEY (time_id),
    CONSTRAINT dim_time_date_actual_key UNIQUE (date_actual)
);

CREATE TABLE IF NOT EXISTS public.fact_attendance
(
    attendance_id serial NOT NULL,
    employee_key integer,
    date_key integer,
    shift_type_id integer,
    time_in timestamp without time zone,
    time_out timestamp without time zone,
    hours_worked numeric(5, 2),
    is_absent boolean DEFAULT false,
    is_late boolean DEFAULT false,
    minutes_late integer DEFAULT 0,
    is_overtime boolean DEFAULT false,
    overtime_hours numeric(5, 2) DEFAULT 0,
    is_approved boolean DEFAULT true,
    absence_reason character varying(255) COLLATE pg_catalog."default",
    source_system character varying(50) COLLATE pg_catalog."default",
    last_updated timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fact_attendance_pkey PRIMARY KEY (attendance_id)
);

CREATE TABLE IF NOT EXISTS public.fact_equipment_assignment
(
    assignment_id serial NOT NULL,
    employee_key integer,
    date_key integer,
    equipment_id character varying(50) COLLATE pg_catalog."default",
    equipment_type character varying(100) COLLATE pg_catalog."default",
    assignment_start_time timestamp without time zone,
    assignment_end_time timestamp without time zone,
    hours_used numeric(5, 2),
    is_operational boolean DEFAULT true,
    issues_reported text COLLATE pg_catalog."default",
    source_system character varying(50) COLLATE pg_catalog."default",
    last_updated timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fact_equipment_assignment_pkey PRIMARY KEY (assignment_id)
);

CREATE TABLE IF NOT EXISTS public.fact_performance
(
    performance_id serial NOT NULL,
    employee_key integer,
    date_key integer,
    evaluation_period_start date,
    evaluation_period_end date,
    bipo_compliance_percentage numeric(5, 2),
    performance_rating numeric(5, 2),
    quality_score numeric(5, 2),
    productivity_score numeric(5, 2),
    safety_score numeric(5, 2),
    attendance_score numeric(5, 2),
    evaluator_id character varying(20) COLLATE pg_catalog."default",
    is_approved boolean DEFAULT false,
    comments text COLLATE pg_catalog."default",
    source_system character varying(50) COLLATE pg_catalog."default",
    last_updated timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fact_performance_pkey PRIMARY KEY (performance_id)
);

CREATE TABLE IF NOT EXISTS public.fact_roster
(
    roster_id serial NOT NULL,
    employee_key integer,
    date_key integer,
    shift_type_id integer,
    is_scheduled boolean DEFAULT true,
    is_holiday boolean DEFAULT false,
    is_leave boolean DEFAULT false,
    leave_type character varying(50) COLLATE pg_catalog."default",
    poh character varying(100) COLLATE pg_catalog."default",
    source_system character varying(50) COLLATE pg_catalog."default",
    last_updated timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fact_roster_pkey PRIMARY KEY (roster_id)
);

CREATE TABLE IF NOT EXISTS public.fact_sleep_metrics
(
    sleep_metrics_id serial NOT NULL,
    employee_key integer,
    date_key integer,
    sleep_time time without time zone,
    wake_time time without time zone,
    sleep_duration_hours numeric(5, 2),
    fixed_sleep_duration_hours numeric(5, 2),
    sleep_quality_rating smallint,
    source_system character varying(50) COLLATE pg_catalog."default",
    last_updated timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fact_sleep_metrics_pkey PRIMARY KEY (sleep_metrics_id)
);

CREATE TABLE IF NOT EXISTS public.stg_attendance
(
    record_id serial NOT NULL,
    badge_id character varying(20) COLLATE pg_catalog."default",
    attendance_date date,
    time_in timestamp without time zone,
    time_out timestamp without time zone,
    shift character varying(10) COLLATE pg_catalog."default",
    sleep_time time without time zone,
    wake_time time without time zone,
    sleep_duration numeric(5, 2),
    fixed_sleep_duration numeric(5, 2),
    source_file character varying(255) COLLATE pg_catalog."default",
    processed boolean DEFAULT false,
    processing_date timestamp without time zone,
    error_message text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT stg_attendance_pkey PRIMARY KEY (record_id)
);

CREATE TABLE IF NOT EXISTS public.stg_employee
(
    record_id serial NOT NULL,
    badge_id character varying(20) COLLATE pg_catalog."default",
    employee_name character varying(100) COLLATE pg_catalog."default",
    department character varying(100) COLLATE pg_catalog."default",
    "position" character varying(100) COLLATE pg_catalog."default",
    status character varying(20) COLLATE pg_catalog."default",
    shift character varying(10) COLLATE pg_catalog."default",
    supervisor_id character varying(20) COLLATE pg_catalog."default",
    poh character varying(100) COLLATE pg_catalog."default",
    bipo_compliance numeric(5, 2),
    source_file character varying(255) COLLATE pg_catalog."default",
    processed boolean DEFAULT false,
    processing_date timestamp without time zone,
    error_message text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT stg_employee_pkey PRIMARY KEY (record_id)
);

CREATE TABLE IF NOT EXISTS public.stg_roster
(
    record_id serial NOT NULL,
    badge_id character varying(20) COLLATE pg_catalog."default",
    employee_name character varying(100) COLLATE pg_catalog."default",
    "position" character varying(100) COLLATE pg_catalog."default",
    poh character varying(100) COLLATE pg_catalog."default",
    roster_date date,
    shift character varying(10) COLLATE pg_catalog."default",
    is_present boolean,
    source_file character varying(255) COLLATE pg_catalog."default",
    processed boolean DEFAULT false,
    processing_date timestamp without time zone,
    error_message text COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT stg_roster_pkey PRIMARY KEY (record_id)
);

ALTER TABLE IF EXISTS public.dim_department
    ADD CONSTRAINT dim_department_parent_department_id_fkey FOREIGN KEY (parent_department_id)
    REFERENCES public.dim_department (department_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.dim_employee
    ADD CONSTRAINT dim_employee_department_id_fkey FOREIGN KEY (department_id)
    REFERENCES public.dim_department (department_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.dim_employee
    ADD CONSTRAINT dim_employee_location_id_fkey FOREIGN KEY (location_id)
    REFERENCES public.dim_location (location_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.dim_employee
    ADD CONSTRAINT dim_employee_position_id_fkey FOREIGN KEY (position_id)
    REFERENCES public.dim_position (position_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fact_attendance
    ADD CONSTRAINT fact_attendance_date_key_fkey FOREIGN KEY (date_key)
    REFERENCES public.dim_time (time_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fact_attendance
    ADD CONSTRAINT fact_attendance_employee_key_fkey FOREIGN KEY (employee_key)
    REFERENCES public.dim_employee (employee_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fact_attendance
    ADD CONSTRAINT fact_attendance_shift_type_id_fkey FOREIGN KEY (shift_type_id)
    REFERENCES public.dim_shift_type (shift_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fact_equipment_assignment
    ADD CONSTRAINT fact_equipment_assignment_date_key_fkey FOREIGN KEY (date_key)
    REFERENCES public.dim_time (time_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fact_equipment_assignment
    ADD CONSTRAINT fact_equipment_assignment_employee_key_fkey FOREIGN KEY (employee_key)
    REFERENCES public.dim_employee (employee_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fact_performance
    ADD CONSTRAINT fact_performance_date_key_fkey FOREIGN KEY (date_key)
    REFERENCES public.dim_time (time_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fact_performance
    ADD CONSTRAINT fact_performance_employee_key_fkey FOREIGN KEY (employee_key)
    REFERENCES public.dim_employee (employee_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fact_roster
    ADD CONSTRAINT fact_roster_date_key_fkey FOREIGN KEY (date_key)
    REFERENCES public.dim_time (time_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fact_roster
    ADD CONSTRAINT fact_roster_employee_key_fkey FOREIGN KEY (employee_key)
    REFERENCES public.dim_employee (employee_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fact_roster
    ADD CONSTRAINT fact_roster_shift_type_id_fkey FOREIGN KEY (shift_type_id)
    REFERENCES public.dim_shift_type (shift_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fact_sleep_metrics
    ADD CONSTRAINT fact_sleep_metrics_date_key_fkey FOREIGN KEY (date_key)
    REFERENCES public.dim_time (time_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.fact_sleep_metrics
    ADD CONSTRAINT fact_sleep_metrics_employee_key_fkey FOREIGN KEY (employee_key)
    REFERENCES public.dim_employee (employee_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;